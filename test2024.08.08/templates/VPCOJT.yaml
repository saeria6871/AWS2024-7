AWSTemplateFormatVersion: "2010-09-09"
Description: "Network infrastructure for OJT practice."

Parameters:
  VpcCIDR:
    Type: String

  PublicWebSubnetAZId:
    Type: String

  PublicWebSubnetCIDR:
    Type: String

  PrivateDBSubnetAZId:
    Type: String

  PrivateDBSubnetCIDR:
    Type: String

  NameTag:
    Description: Name in tag for resources. This value is used for a `Name` tag.
    Type: String
    Default: ""

Conditions:
  UseNameTag: !Not [ !Equals [ !Ref NameTag, "" ] ]

Resources:
# VPC関係の記述
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
      Tags:
        - Fn::If:
          - UseNameTag
          - Key: Name
            Value: !Ref NameTag
          - !Ref AWS::NoValue
        - Key: built-by
          Value: !Ref AWS::StackId

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Fn::If:
          - UseNameTag
          - Key: Name
            Value: !Ref NameTag
          - !Ref AWS::NoValue
        - Key: built-by
          Value: !Ref AWS::StackId

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC


# PublicSubnet関係の記述
  PublicWebSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref PublicWebSubnetAZId
      CidrBlock: !Ref PublicWebSubnetCIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Fn::If:
          - UseNameTag
          - Key: Name
            Value: !Ref NameTag
          - !Ref AWS::NoValue
        - Key: built-by
          Value: !Ref AWS::StackId

  PublicWebSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Fn::If:
          - UseNameTag
          - Key: Name
            Value: !Ref NameTag
          - !Ref AWS::NoValue
        - Key: built-by
          Value: !Ref AWS::StackId

  PublicWebSubnetDefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicWebSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicWebSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicWebSubnetRouteTable
      SubnetId: !Ref PublicWebSubnet

#Privatesubnet関係の記述 
  PrivateDBSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref PrivateDBSubnetAZId
      CidrBlock: !Ref PrivateDBSubnetCIDR
      VpcId: !Ref VPC
      Tags:
        - Fn::If:
          - UseNameTag
          - Key: Name
            Value: !Ref NameTag
          - !Ref AWS::NoValue
        - Key: built-by
          Value: !Ref AWS::StackId

  PrivateDBSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Fn::If:
          - UseNameTag
          - Key: Name
            Value: !Ref NameTag
          - !Ref AWS::NoValue
        - Key: built-by
          Value: !Ref AWS::StackId

  PrivateDBSubnetDefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateDBSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  

  PrivateDBSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateDBSubnetRouteTable
      SubnetId: !Ref PrivateDBSubnet


  #NAT Gatewayをつくる
  NatGateway:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt EipNat.AllocationId
            SubnetId: !Ref PublicWebSubnet
            Tags:
                - Key: Name
                  Value: "NatGateway"

    #Elastic IPをつくる
  EipNat:
        Type: AWS::EC2::EIP
        Properties:
            Domain: "vpc"



#outputsの記述
Outputs:
  VpcId:
    Description: Id of the vpc.
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VpcId"

  InternetGatewayName:
    Description: Name of the internet gateway.
    Value: !Ref InternetGateway

  PublicWebSubnetAZName:
    Description: AvailabilityZone name of the public subnet.
    Value: !GetAtt PublicWebSubnet.AvailabilityZone

  PublicWebSubnetId:
    Description: Subnet id of the public subnet.
    Value: !Ref PublicWebSubnet
    Export:
      Name: !Sub "${AWS::StackName}-PublicWebSubnetId"

  PublicWebSubnetRouteTableId:
    Description: Route table id of the public subnet.
    Value: !Ref PublicWebSubnetRouteTable

  PrivateDBSubnetAZName:
    Description: AvailabilityZone name of the private subnet.
    Value: !GetAtt PrivateDBSubnet.AvailabilityZone

  PrivateDBSubnetId:
    Description: Subnet id of the private subnet.
    Value: !Ref PrivateDBSubnet
    Export:
      Name: !Sub "${AWS::StackName}-PrivateDBSubnetId"